// Code generated by a template
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using Quantumart.QP8.EntityFrameworkCore;
namespace QA.DemoSite.DAL
{
    public partial class QPAbstractItem: IQPArticle
    {
        public QPAbstractItem()
        {
		    Children = new HashSet<QPAbstractItem>();
		    Versions = new HashSet<QPAbstractItem>();
        }

        public virtual Int32 Id { get; set; }
        public virtual Int32 StatusTypeId { get; set; }
        public virtual bool Visible { get; set; }
        public virtual bool Archive { get; set; }
        public virtual DateTime Created { get; set; }
        public virtual DateTime Modified { get; set; }
        public virtual Int32 LastModifiedBy { get; set; }
        public virtual StatusType StatusType { get; set; }

		private String _Title;
		public virtual String Title 
		{ 
			get { return _Title; }
			set { _Title = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _Name;
		public virtual String Name 
		{ 
			get { return _Name; }
			set { _Name = QpDataContext.Current.ReplacePlaceholders(value);}
		}
        public virtual Boolean? IsVisible { get; set; }
        public virtual Boolean? IsPage { get; set; }
		private String _ZoneName;
		public virtual String ZoneName 
		{ 
			get { return _ZoneName; }
			set { _ZoneName = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _AllowedUrlPatterns;
		public virtual String AllowedUrlPatterns 
		{ 
			get { return _AllowedUrlPatterns; }
			set { _AllowedUrlPatterns = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _DeniedUrlPatterns;
		public virtual String DeniedUrlPatterns 
		{ 
			get { return _DeniedUrlPatterns; }
			set { _DeniedUrlPatterns = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _Description;
		public virtual String Description 
		{ 
			get { return _Description; }
			set { _Description = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _Keywords;
		public virtual String Keywords 
		{ 
			get { return _Keywords; }
			set { _Keywords = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _MetaDescription;
		public virtual String MetaDescription 
		{ 
			get { return _MetaDescription; }
			set { _MetaDescription = QpDataContext.Current.ReplacePlaceholders(value);}
		}
		private String _Tags;
		public virtual String Tags 
		{ 
			get { return _Tags; }
			set { _Tags = QpDataContext.Current.ReplacePlaceholders(value);}
		}
        public virtual Boolean? IsInSiteMap { get; set; }
        public virtual Int32? IndexOrder { get; set; }
        public virtual Int32? ExtensionId { get; set; }
        public virtual Int32? ContentId { get; set; }
        public virtual Int32? TitleFormat_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPAbstractItem Parent { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPDiscriminator Discriminator { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPAbstractItem VersionOf { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPCulture Culture { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Parent_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Discriminator_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? VersionOf_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Culture_ID { get; set; }
		/// <summary>
		/// Auto-generated backing property for field (id: 27508)/Parent Children
		/// </summary>
		public  ICollection<QPAbstractItem> Children { get; set; }
		/// <summary>
		/// Auto-generated backing property for field (id: 27520)/VersionOf Versions
		/// </summary>
		public  ICollection<QPAbstractItem> Versions { get; set; }
	}
}
	
