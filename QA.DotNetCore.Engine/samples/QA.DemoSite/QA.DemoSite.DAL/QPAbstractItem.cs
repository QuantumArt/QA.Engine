// Code generated by a template
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
namespace QA.DemoSite.DAL
{
    public partial class QPAbstractItem: IQPArticle
    {
        public QPAbstractItem()
        {
		    Children = new HashSet<QPAbstractItem>();
		    Versions = new HashSet<QPAbstractItem>();
        }

        public virtual Int32 Id { get; set; }
        public virtual Int32 StatusTypeId { get; set; }
        public virtual bool Visible { get; set; }
        public virtual bool Archive { get; set; }
        public virtual DateTime Created { get; set; }
        public virtual DateTime Modified { get; set; }
        public virtual Int32 LastModifiedBy { get; set; }
        public virtual StatusType StatusType { get; set; }

        public virtual String Title { get; set; }
        public virtual String Name { get; set; }
        public virtual Boolean? IsVisible { get; set; }
        public virtual Boolean? IsPage { get; set; }
        public virtual String ZoneName { get; set; }
        public virtual String AllowedUrlPatterns { get; set; }
        public virtual String DeniedUrlPatterns { get; set; }
        public virtual String Description { get; set; }
        public virtual String Keywords { get; set; }
        public virtual String MetaDescription { get; set; }
        public virtual String Tags { get; set; }
        public virtual Boolean? IsInSiteMap { get; set; }
        public virtual Int32? IndexOrder { get; set; }
        public virtual Int32? ExtensionId { get; set; }
        public virtual Int32? ContentId { get; set; }
        public virtual Int32? TitleFormat_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPAbstractItem Parent { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPDiscriminator Discriminator { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPAbstractItem VersionOf { get; set; }
		/// <summary>
		/// 
		/// </summary>			
		public virtual QPCulture Culture { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Parent_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Discriminator_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? VersionOf_ID { get; set; }
		/// <summary>
		/// 
		/// </summary>
		public virtual Int32? Culture_ID { get; set; }
		/// <summary>
		/// Auto-generated backing property for field (id: 27508)/Parent Children
		/// </summary>
		public  ICollection<QPAbstractItem> Children { get; set; }
		/// <summary>
		/// Auto-generated backing property for field (id: 27520)/VersionOf Versions
		/// </summary>
		public  ICollection<QPAbstractItem> Versions { get; set; }
		#region Generated Content properties
        // public Boolean IsVisibleExact { get { return this.IsVisible == null ? default(Boolean) : this.IsVisible.Value; } }
        // public Boolean IsPageExact { get { return this.IsPage == null ? default(Boolean) : this.IsPage.Value; } }
        // public Boolean IsInSiteMapExact { get { return this.IsInSiteMap == null ? default(Boolean) : this.IsInSiteMap.Value; } }
        // public Int32 IndexOrderExact { get { return this.IndexOrder == null ? default(Int32) : this.IndexOrder.Value; } }
        // public Int32 ExtensionIdExact { get { return this.ExtensionId == null ? default(Int32) : this.ExtensionId.Value; } }
        // public Int32 ContentIdExact { get { return this.ContentId == null ? default(Int32) : this.ContentId.Value; } }
        // public Int32 TitleFormat_IDExact { get { return this.TitleFormat_ID == null ? default(Int32) : this.TitleFormat_ID.Value; } }
		#endregion
	}
}
	
