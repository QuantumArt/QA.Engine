// Owners: Nikolay Karlov, Grigorenko Paul
// This code is generated by a template, so don't modify it.
// All changes will be discarded.
// Last generated: 07/17/2018 22:01:17
// CacheTags.cs

namespace QA.DemoSite.CacheTags
{
	using System.Linq;
    using QA.DotNetCore.Caching.Interfaces;
    using QA.DotNetCore.Engine.QpData.Settings;

    /// <summary>
    /// Контентные версионные теги
    /// </summary>
	public static partial class CacheTags
	{
		/// <summary>
        /// AbstractItem
        /// Элемент структуры сайта
		/// </summary>
        public static QPContent QPAbstractItem = new QPContent { Id = 537, SiteId = 52, Name = "AbstractItem", NetName = "QPAbstractItem"};
		/// <summary>
        /// ItemDefinition
        /// Типы страниц и виджетов
		/// </summary>
        public static QPContent QPDiscriminator = new QPContent { Id = 538, SiteId = 52, Name = "ItemDefinition", NetName = "QPDiscriminator"};
		/// <summary>
        /// Локализация
        /// 
		/// </summary>
        public static QPContent QPCulture = new QPContent { Id = 540, SiteId = 52, Name = "Локализация", NetName = "QPCulture"};
		/// <summary>
        /// ItemDefinitionConstraint
        /// 
		/// </summary>
        public static QPContent QPItemDefinitionConstraint = new QPContent { Id = 10609, SiteId = 52, Name = "ItemDefinitionConstraint", NetName = "QPItemDefinitionConstraint"};
		/// <summary>
        /// Блог Посты
        /// 
		/// </summary>
        public static QPContent BlogPost = new QPContent { Id = 30745, SiteId = 52, Name = "Блог Посты", NetName = "BlogPost"};
		/// <summary>
        /// Блог Категории
        /// 
		/// </summary>
        public static QPContent BlogCategory = new QPContent { Id = 30746, SiteId = 52, Name = "Блог Категории", NetName = "BlogCategory"};
		/// <summary>
        /// Блог Теги
        /// 
		/// </summary>
        public static QPContent BlogTag = new QPContent { Id = 30747, SiteId = 52, Name = "Блог Теги", NetName = "BlogTag"};
		/// <summary>
        /// FAQ Вопросы и ответы
        /// 
		/// </summary>
        public static QPContent FaqItem = new QPContent { Id = 30749, SiteId = 52, Name = "FAQ Вопросы и ответы", NetName = "FaqItem"};
	}

	/// <summary>
	/// Утилиты для работы с кештегами
	/// </summary>
	public class CacheTagUtilities
	{
		readonly IQpContentCacheTagNamingProvider _qpContentCacheTagNamingProvider;
		readonly QpSettings _qpSettings;

		public CacheTagUtilities(IQpContentCacheTagNamingProvider qpContentCacheTagNamingProvider, QpSettings qpSettings)
		{
			_qpContentCacheTagNamingProvider = qpContentCacheTagNamingProvider;
			_qpSettings = qpSettings;
		}

		/// <summary>
		/// Преобразование тегов в массив
		/// </summary>
		public string[] Merge(params QPContent[] tags)
		{
			return tags.Select(c => _qpContentCacheTagNamingProvider.Get(c.Name, c.SiteId, _qpSettings.IsStage)).Where(t => t != null).ToArray();
		}
	}
	
    public class QPContent
    {
        public int Id { get; set; }
        public int SiteId { get; set; }
        public string Name { get; set; }
		public string NetName { get; set; }
    }
}
